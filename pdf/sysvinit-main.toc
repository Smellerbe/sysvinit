\contentsline {chapter}{\numberline {1}Sysvinit 项目工具简介}{7}{chapter.1}
\contentsline {section}{\numberline {1.1}项目背景介绍}{7}{section.1.1}
\contentsline {subsection}{\numberline {1.1.1}项目相关资源链接}{7}{subsection.1.1.1}
\contentsline {subsection}{\numberline {1.1.2}其他类似软件包}{8}{subsection.1.1.2}
\contentsline {section}{\numberline {1.2}项目技术架构}{8}{section.1.2}
\contentsline {subsection}{\numberline {1.2.1}核心命令 init/telinit}{9}{subsection.1.2.1}
\contentsline {subsection}{\numberline {1.2.2}关机命令 halt/shutdown/poweroff/reboot}{9}{subsection.1.2.2}
\contentsline {subsection}{\numberline {1.2.3}运行级别命令 sulogin/runlevel}{9}{subsection.1.2.3}
\contentsline {subsection}{\numberline {1.2.4}进程/消息相关命令 mesg/wall/killall5/pidof}{9}{subsection.1.2.4}
\contentsline {subsection}{\numberline {1.2.5}日志相关命令 bootlogd/utmpdump}{10}{subsection.1.2.5}
\contentsline {subsection}{\numberline {1.2.6}文件系统相关命令 mountpoint/fstab-decode}{10}{subsection.1.2.6}
\contentsline {chapter}{\numberline {2}Sysvinit 项目概要分析}{11}{chapter.2}
\contentsline {section}{\numberline {2.1}代码实现概要分析}{11}{section.2.1}
\contentsline {subsection}{\numberline {2.1.1}源码目录结构}{11}{subsection.2.1.1}
\contentsline {subsection}{\numberline {2.1.2}源文件代码量分析}{13}{subsection.2.1.2}
\contentsline {subsection}{\numberline {2.1.3}Makefile 分析}{14}{subsection.2.1.3}
\contentsline {section}{\numberline {2.2}项目下载编译执行}{15}{section.2.2}
\contentsline {subsection}{\numberline {2.2.1}wget下载源码包}{15}{subsection.2.2.1}
\contentsline {subsection}{\numberline {2.2.2}tar解压源码包}{16}{subsection.2.2.2}
\contentsline {subsection}{\numberline {2.2.3}修改 Makefile}{18}{subsection.2.2.3}
\contentsline {subsection}{\numberline {2.2.4}编译项目源码}{19}{subsection.2.2.4}
\contentsline {subsection}{\numberline {2.2.5}查看生成的可执行文件}{20}{subsection.2.2.5}
\contentsline {section}{\numberline {2.3}工具安装使用流程}{21}{section.2.3}
\contentsline {subsection}{\numberline {2.3.1}工具安装}{21}{subsection.2.3.1}
\contentsline {subsubsection}{查看安装目录}{22}{section*.2}
\contentsline {subsubsection}{查看帮助文件}{23}{section*.3}
\contentsline {subsection}{\numberline {2.3.2}init 命令}{24}{subsection.2.3.2}
\contentsline {subsubsection}{init 命令说明}{24}{section*.4}
\contentsline {subsubsection}{命令格式}{24}{section*.5}
\contentsline {subsubsection}{运行级别}{24}{section*.6}
\contentsline {subsubsection}{启动过程}{25}{section*.7}
\contentsline {subsubsection}{选项}{25}{section*.8}
\contentsline {subsection}{\numberline {2.3.3}shutdown 命令}{27}{subsection.2.3.3}
\contentsline {subsubsection}{shutdown 命令说明}{27}{section*.9}
\contentsline {subsubsection}{命令格式}{27}{section*.10}
\contentsline {subsubsection}{参数选项}{27}{section*.11}
\contentsline {subsection}{\numberline {2.3.4}halt 命令}{28}{subsection.2.3.4}
\contentsline {subsubsection}{halt 命令说明}{28}{section*.12}
\contentsline {subsubsection}{命令格式}{28}{section*.13}
\contentsline {subsubsection}{主要选项}{28}{section*.14}
\contentsline {subsection}{\numberline {2.3.5}poweroff 命令}{29}{subsection.2.3.5}
\contentsline {subsubsection}{命令格式}{29}{section*.15}
\contentsline {subsubsection}{主要选项}{29}{section*.16}
\contentsline {subsection}{\numberline {2.3.6}reboot 命令}{29}{subsection.2.3.6}
\contentsline {subsubsection}{命令格式}{29}{section*.17}
\contentsline {subsubsection}{主要选项}{29}{section*.18}
\contentsline {subsection}{\numberline {2.3.7}telinit 命令}{29}{subsection.2.3.7}
\contentsline {subsubsection}{命令格式}{30}{section*.19}
\contentsline {subsubsection}{参数说明}{30}{section*.20}
\contentsline {subsection}{\numberline {2.3.8}killall5 命令}{30}{subsection.2.3.8}
\contentsline {subsubsection}{命令格式}{30}{section*.21}
\contentsline {subsubsection}{主要选项}{30}{section*.22}
\contentsline {subsection}{\numberline {2.3.9}pidof}{31}{subsection.2.3.9}
\contentsline {subsubsection}{命令格式}{31}{section*.23}
\contentsline {subsubsection}{主要选项}{31}{section*.24}
\contentsline {subsection}{\numberline {2.3.10}last/lastb 命令}{31}{subsection.2.3.10}
\contentsline {subsubsection}{命令格式}{31}{section*.25}
\contentsline {subsubsection}{主要选项}{32}{section*.26}
\contentsline {subsection}{\numberline {2.3.11}mesg 命令}{32}{subsection.2.3.11}
\contentsline {subsubsection}{命令格式}{32}{section*.27}
\contentsline {subsubsection}{主要选项}{32}{section*.28}
\contentsline {subsection}{\numberline {2.3.12}mountpoint 命令}{32}{subsection.2.3.12}
\contentsline {subsubsection}{命令格式}{33}{section*.29}
\contentsline {subsubsection}{主要选项}{33}{section*.30}
\contentsline {subsection}{\numberline {2.3.13}fstab-decode 命令}{33}{subsection.2.3.13}
\contentsline {subsubsection}{命令格式}{33}{section*.31}
\contentsline {subsubsection}{举例}{33}{section*.32}
\contentsline {subsection}{\numberline {2.3.14}runlevel 命令}{33}{subsection.2.3.14}
\contentsline {subsubsection}{命令格式}{34}{section*.33}
\contentsline {subsubsection}{主要选项}{34}{section*.34}
\contentsline {subsection}{\numberline {2.3.15}sulogin 命令}{34}{subsection.2.3.15}
\contentsline {subsubsection}{命令格式}{34}{section*.35}
\contentsline {subsubsection}{主要选项}{34}{section*.36}
\contentsline {subsection}{\numberline {2.3.16}wall 命令}{35}{subsection.2.3.16}
\contentsline {subsubsection}{wall 命令说明}{35}{section*.37}
\contentsline {subsubsection}{命令格式}{35}{section*.38}
\contentsline {subsection}{\numberline {2.3.17}bootlogd 命令}{35}{subsection.2.3.17}
\contentsline {subsubsection}{命令格式}{35}{section*.39}
\contentsline {subsubsection}{主要选项}{36}{section*.40}
\contentsline {subsection}{\numberline {2.3.18}utmpdump 命令}{36}{subsection.2.3.18}
\contentsline {subsubsection}{命令格式}{36}{section*.41}
\contentsline {subsubsection}{主要选项}{36}{section*.42}
\contentsline {chapter}{\numberline {3}Sysvinit 项目详细分析}{39}{chapter.3}
\contentsline {section}{\numberline {3.1}init 命令实现代码分析}{40}{section.3.1}
\contentsline {subsection}{\numberline {3.1.1}init.c 文件中的数据分析}{40}{subsection.3.1.1}
\contentsline {subsection}{\numberline {3.1.2}init.c 中的 main 函数流程分析}{41}{subsection.3.1.2}
\contentsline {subsection}{\numberline {3.1.3}init\_main 函数流程分析}{42}{subsection.3.1.3}
\contentsline {subsection}{\numberline {3.1.4}console\_init 函数流程分析}{43}{subsection.3.1.4}
\contentsline {subsection}{\numberline {3.1.5}read\_inittab 函数流程分析}{44}{subsection.3.1.5}
\contentsline {subsubsection}{CHILD 机构体 (struct \emph {child})}{44}{section*.43}
\contentsline {subsubsection}{actions 数组 (struct actions)}{44}{section*.44}
\contentsline {subsubsection}{ACTIONS 宏定义}{45}{section*.45}
\contentsline {subsubsection}{read\_inittab 函数执行流程分析}{46}{section*.46}
\contentsline {subsection}{\numberline {3.1.6}start\_if\_needed 函数流程分析}{47}{subsection.3.1.6}
\contentsline {subsection}{\numberline {3.1.7}startup 函数流程分析}{47}{subsection.3.1.7}
\contentsline {subsection}{\numberline {3.1.8}spawn 函数流程分析}{48}{subsection.3.1.8}
\contentsline {subsection}{\numberline {3.1.9}boot\_transitions 函数流程分析}{48}{subsection.3.1.9}
\contentsline {subsection}{\numberline {3.1.10}check\_init\_fifo() 函数流程分析}{49}{subsection.3.1.10}
\contentsline {subsubsection}{struct init\_request 请求协议格式}{50}{section*.47}
\contentsline {subsubsection}{cmd 请求类别标识}{50}{section*.48}
\contentsline {subsection}{\numberline {3.1.11}fail\_check 函数流程分析}{51}{subsection.3.1.11}
\contentsline {subsubsection}{SLEEEPTIME 数据}{51}{section*.49}
\contentsline {subsection}{\numberline {3.1.12}process\_signals 函数流程分析}{51}{subsection.3.1.12}
\contentsline {subsection}{\numberline {3.1.13}console\_stty 函数流程分析}{53}{subsection.3.1.13}
\contentsline {subsection}{\numberline {3.1.14}fifo\_new\_level 函数流程分析}{53}{subsection.3.1.14}
\contentsline {subsection}{\numberline {3.1.15}re\_exec 函数流程分析}{53}{subsection.3.1.15}
\contentsline {subsection}{\numberline {3.1.16}get\_init\_default 函数流程分析}{54}{subsection.3.1.16}
\contentsline {subsection}{\numberline {3.1.17}telinit 函数流程分析}{54}{subsection.3.1.17}
\contentsline {section}{\numberline {3.2}init进程执行流程分析}{55}{section.3.2}
\contentsline {subsection}{\numberline {3.2.1}init程序的3种启动执行方式}{55}{subsection.3.2.1}
\contentsline {subsection}{\numberline {3.2.2}方式1 - Kernel 启动 init}{55}{subsection.3.2.2}
\contentsline {subsection}{\numberline {3.2.3}方式2 - 用户命令 telinit 启动 init}{55}{subsection.3.2.3}
\contentsline {subsection}{\numberline {3.2.4}方式3 - 在程序中通过 re\_exec() 函数启动 init}{55}{subsection.3.2.4}
\contentsline {subsection}{\numberline {3.2.5}三种方式的相互联系}{58}{subsection.3.2.5}
\contentsline {subsection}{\numberline {3.2.6}三种方式的比较区别}{58}{subsection.3.2.6}
\contentsline {section}{\numberline {3.3}halt命令执行流程分析}{61}{section.3.3}
\contentsline {subsection}{\numberline {3.3.1}halt 命令的数据分析}{61}{subsection.3.3.1}
\contentsline {subsection}{\numberline {3.3.2}halt命令实现代码分析}{62}{subsection.3.3.2}
\contentsline {subsubsection}{参数解析}{62}{section*.50}
\contentsline {subsubsection}{不同参数对应着不同处理}{63}{section*.51}
\contentsline {section}{\numberline {3.4}shutdown命令执行流程分析}{64}{section.3.4}
\contentsline {subsection}{\numberline {3.4.1}shutdown命令的数据分析}{64}{subsection.3.4.1}
\contentsline {subsection}{\numberline {3.4.2}shutdown命令实现代码分析}{64}{subsection.3.4.2}
\contentsline {section}{\numberline {3.5}sulogin命令执行流程分析}{64}{section.3.5}
\contentsline {subsection}{\numberline {3.5.1}sushell函数代码分析}{64}{subsection.3.5.1}
\contentsline {subsection}{\numberline {3.5.2}getrootpwent函数代码分析}{64}{subsection.3.5.2}
\contentsline {subsection}{\numberline {3.5.3}getpasswd 函数代码分析}{65}{subsection.3.5.3}
\contentsline {section}{\numberline {3.6}runlevel命令执行流程分析}{65}{section.3.6}
\contentsline {subsection}{\numberline {3.6.1}utmpname 函数代码分析}{65}{subsection.3.6.1}
\contentsline {subsection}{\numberline {3.6.2}setutent 函数代码分析}{65}{subsection.3.6.2}
\contentsline {subsection}{\numberline {3.6.3}getutent 函数代码分析}{66}{subsection.3.6.3}
\contentsline {subsection}{\numberline {3.6.4}utmp结构定义}{66}{subsection.3.6.4}
\contentsline {subsubsection}{ut\_type有以下几种类型}{66}{section*.52}
\contentsline {subsection}{\numberline {3.6.5}endutent 函数}{67}{subsection.3.6.5}
\contentsline {section}{\numberline {3.7}killall5 命令执行流程分析}{67}{section.3.7}
\contentsline {subsection}{\numberline {3.7.1}killall5 主函数代码分析}{67}{subsection.3.7.1}
\contentsline {subsubsection}{获得执行程序名 progname}{67}{section*.53}
\contentsline {subsubsection}{打开系统日志}{68}{section*.54}
\contentsline {subsubsection}{处理 pidof 命令的情况}{68}{section*.55}
\contentsline {subsubsection}{分析 -o omitpid 参数创建双向链表 omit}{69}{section*.56}
\contentsline {subsubsection}{挂载 /proc 文件系统}{70}{section*.57}
\contentsline {subsubsection}{暂时忽略 SIGTERM/SIGSTOP/SIGKILL 信号}{71}{section*.58}
\contentsline {subsubsection}{禁止内存换出，暂停所有进程}{71}{section*.59}
\contentsline {subsubsection}{读 /proc 文件系统，建立进程链表 plist}{71}{section*.60}
\contentsline {subsubsection}{根据 plist 链表开始依次 kill 进程}{72}{section*.61}
\contentsline {subsubsection}{恢复所有进程运行 （从 STOP 又回到 CONT）}{73}{section*.62}
\contentsline {subsubsection}{关闭日志}{73}{section*.63}
\contentsline {subsubsection}{调用 usleep(1) 强制 Kernel 运行调度器}{74}{section*.64}
\contentsline {section}{\numberline {3.8}pidof 命令执行流程分析}{74}{section.3.8}
\contentsline {subsection}{\numberline {3.8.1}main\_pidof 主程序代码分析}{74}{subsection.3.8.1}
\contentsline {subsubsection}{初始化和数据结构定义}{74}{section*.65}
\contentsline {subsubsection}{参数处理并完成 omit 进程号链表}{75}{section*.66}
\contentsline {subsubsection}{检查对于 /proc/pid/root 的访问权限}{76}{section*.67}
\contentsline {subsubsection}{检查 fs 是否基于 nfs 的网络文件系统}{77}{section*.68}
\contentsline {subsubsection}{读 /proc 文件系统，建立进程链表 plist}{77}{section*.69}
\contentsline {subsubsection}{调用 pidof 函数，返回进程名为 argv{[}f{]} 进程 PIDQ\_HEAD 链表}{77}{section*.70}
\contentsline {subsubsection}{退出前的清理工作}{78}{section*.71}
\contentsline {subsection}{\numberline {3.8.2}readproc 函数代码分析}{79}{subsection.3.8.2}
\contentsline {subsubsection}{改变目录到 /proc ，调用 opendir 打开当前目录文件 .}{79}{section*.72}
\contentsline {subsubsection}{释放已经存在的 plist 链表，为重新生成做好准备}{79}{section*.73}
\contentsline {subsubsection}{开始遍历 /proc 目录，找出是进程号（大于0的数字）的文件名}{80}{section*.74}
\contentsline {subsubsection}{以 bash 文件为例,查看进程的 stat 文件信息，找出进程名}{80}{section*.75}
\contentsline {subsubsection}{得到进程 session id，判断其是否 kernel thread}{81}{section*.76}
\contentsline {subsubsection}{获得其他参数}{82}{section*.77}
\contentsline {subsubsection}{添加进入链表，并完成收尾工作}{82}{section*.78}
\contentsline {subsection}{\numberline {3.8.3}pidof 函数代码分析}{83}{subsection.3.8.3}
\contentsline {chapter}{\numberline {4}Sysvinit 项目安全漏洞}{85}{chapter.4}
\contentsline {section}{\numberline {4.1}案例1-INIT\_FIFO管道文件安全漏洞}{85}{section.4.1}
\contentsline {subsection}{\numberline {4.1.1}修改默认管道文件}{85}{subsection.4.1.1}
\contentsline {subsection}{\numberline {4.1.2}修改管道文件权限}{85}{subsection.4.1.2}
\contentsline {subsection}{\numberline {4.1.3}管道传送结构体定义}{86}{subsection.4.1.3}
\contentsline {subsection}{\numberline {4.1.4}制作数据文件}{87}{subsection.4.1.4}
\contentsline {subsection}{\numberline {4.1.5}测试通过 INIT\_FIFO 来传送 request 数据包}{88}{subsection.4.1.5}
\contentsline {section}{\numberline {4.2}案例2-umask掩码安全漏洞}{89}{section.4.2}
\contentsline {subsection}{\numberline {4.2.1}umask用法简介}{90}{subsection.4.2.1}
\contentsline {subsection}{\numberline {4.2.2}umask的作用权限掩码}{90}{subsection.4.2.2}
\contentsline {subsection}{\numberline {4.2.3}参考资料}{90}{subsection.4.2.3}
\contentsline {section}{\numberline {4.3}案例3-利用脚本和符号链接攻击系统目录}{90}{section.4.3}
\contentsline {subsection}{\numberline {4.3.1}举例}{91}{subsection.4.3.1}
\contentsline {subsection}{\numberline {4.3.2}参考资料}{91}{subsection.4.3.2}
\contentsline {section}{\numberline {4.4}案例4-Android root 提权漏洞}{91}{section.4.4}
\contentsline {subsection}{\numberline {4.4.1}举例}{92}{subsection.4.4.1}
\contentsline {subsection}{\numberline {4.4.2}参考资料}{92}{subsection.4.4.2}
\contentsline {chapter}{\numberline {5}Sysvinit 项目运行时调试图}{93}{chapter.5}
\contentsline {section}{\numberline {5.1}Linux 内核启动 init 进程}{93}{section.5.1}
\contentsline {subsection}{\numberline {5.1.1}start\_kernel}{93}{subsection.5.1.1}
\contentsline {subsection}{\numberline {5.1.2}parse\_options}{94}{subsection.5.1.2}
\contentsline {subsection}{\numberline {5.1.3}rest\_init}{95}{subsection.5.1.3}
\contentsline {subsection}{\numberline {5.1.4}init 函数}{95}{subsection.5.1.4}
\contentsline {section}{\numberline {5.2}init 进程和 telinit 之间的运行调试图}{99}{section.5.2}
\contentsline {subsection}{\numberline {5.2.1}修改 INIT\_FIFO 改变两者联系的管道}{99}{subsection.5.2.1}
\contentsline {subsection}{\numberline {5.2.2}修改 Makefile ，加上 -DDEBUG 选项}{99}{subsection.5.2.2}
\contentsline {subsection}{\numberline {5.2.3}修改 reboot 操作为打印语句，以防系统重启}{101}{subsection.5.2.3}
\contentsline {subsection}{\numberline {5.2.4}修改源码中信号处理函数，以便直接中断 init 执行}{101}{subsection.5.2.4}
\contentsline {subsection}{\numberline {5.2.5}修改源码中关闭标准输出的部分，可以显示出调试信息}{101}{subsection.5.2.5}
\contentsline {subsection}{\numberline {5.2.6}在 Daemon 程序中插入打印当前获得 request 的信息}{102}{subsection.5.2.6}
\contentsline {subsection}{\numberline {5.2.7}重新编译运行 sudo ./init -i}{102}{subsection.5.2.7}
\contentsline {subsection}{\numberline {5.2.8}启动 telinit 1 要求切换运行级别为单用户}{103}{subsection.5.2.8}
\contentsline {subsection}{\numberline {5.2.9}查看 init 接收请求和处理方法}{103}{subsection.5.2.9}
